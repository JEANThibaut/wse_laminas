<div id="scroll-gallery">
    <?php foreach ($this->images as $index => $url): ?>
        <div class="photo-slide" data-index="<?= $index ?>">
            <div class="photo-content text-center">

                <img data-src="<?= htmlentities($url) ?>" class="lazy-img img-fluid rounded shadow" alt="photo <?= $index ?>">
                        <a href="<?= htmlentities($url) ?>" download class="btn btn-outline-light ">
                    <i class="fas fa-download"></i> Télécharger
                </a>
          
            </div>
        </div>
    <?php endforeach; ?>
</div>


<style>



#scroll-gallery {
    height: 100vh;
    overflow-y: scroll;
    scroll-snap-type: y mandatory;
    -webkit-overflow-scrolling: touch;
}

.photo-slide {
    height: 75vh; 
    scroll-snap-align: start;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0 1rem;
    box-sizing: border-box;
}

.photo-content {
    width: 100%;
    /* max-width: 800px; */
    display: flex;
    flex-direction: column;
    align-items: center;
}

.photo-content img {
    max-height: 70vh;
    max-width: 100%;
    object-fit: contain;
    opacity: 0;
    transition: opacity 0.3s;
    border-radius: 8px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
}


</style>

<script>
    const slides = document.querySelectorAll('.photo-slide');

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const index = parseInt(entry.target.dataset.index);
                [index - 1, index, index + 1].forEach(i => {
                    const slide = document.querySelector(`.photo-slide[data-index="${i}"] img`);
                    if (slide && !slide.src) {
                        slide.src = slide.dataset.src;
                        slide.onload = () => slide.style.opacity = '1';
                    }
                });
            }
        });
    }, {
        root: document.querySelector('#scroll-gallery'),
        threshold: 0.6,
    });

    slides.forEach(slide => observer.observe(slide));
</script>
